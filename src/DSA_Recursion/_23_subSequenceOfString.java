
/*
    WAP to return all its subsequences in an arraylist. A string is a subsequence of a given string that is generated by
    deleting some character of a given string without changing its order.

     No of subsequences -----> 2 to the power (Number of characters present in the string)
 */

package DSA_Recursion;

import java.util.ArrayList;

public class _23_subSequenceOfString {

    static ArrayList<String> SubString(String str){
        ArrayList<String> final_ans = new ArrayList<>();        // big problem ----> empty arraylist
        // base case
        if(str.length() == 0){
            final_ans.add("");      // empty string ka bhi ek empty subsequence hota hai isiliye hum empty string return
            return final_ans;       // kar rahe hai ... jaise  5^0 = 1 , similarly ek empty string ka bhi hota hai...
        }
        char current_char = str.charAt(0);      // current character ---> a
        System.out.println("current_character are : "+str.charAt(0));
        // Recursive case
        ArrayList<String> smallAns = SubString(str.substring(1));
        // smallAns = ["bc" , "b" , "c" , " "]

        // Self work
        for(String str1 : smallAns){
            final_ans.add(str1);                //  "bc"    "b"     "c"     " "
            final_ans.add(current_char+str1);   //  "abc"   "ab"    "ac"    "a "
        }
        // final answer ----> ["bc" , "abc" , "b" , "ab" , "c" , "ac" , " " , "a"]

        return final_ans;
    }
    public static void main(String[] args) {
        ArrayList<String> final_ans = SubString("abc");
//        System.out.println(final_ans);              // [, a, b, ab, c, ac, bc, abc]
        for(String ss : final_ans){
            System.out.println(ss);
        }
    }
}
